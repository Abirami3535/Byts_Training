/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */
class Solution{
public:
struct ListNode* mergeTwoList(struct ListNode* l1, ListNode* l2)
{
    struct ListNode* head=NULL, *tail=NULL;
    if(l1==NULL) return l2;
    if(l2==NULL) return l1;

    if(l1->val<=l2->val)
    {
        head=tail=l1;
        l1=l1->next;
    }

    else
    {
        head=tail=l2;
        l2=l2->next;
    }

    while(l1!=NULL && l2!=NULL)
    {
        if(l1->val<=l2->val)
        {
            tail->next=l1;
            l1=l1->next;
            tail=tail->next;
            
        }
        else
        {
            tail->next=l2;
            l2=l2->next;
            tail=tail->next;
            
        }
    }
    if(l1==NULL) tail->next=l2;
    if(l2==NULL) tail->next=l1;
    return head;
}

struct ListNode* mergeKLists(vector<struct ListNode*>v){
    struct ListNode* head=NULL;
    for(auto i:v)
    {
        head= mergeTwoList(head,i);
    }
    return head;
  }
};
